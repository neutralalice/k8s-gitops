name: "Publish OCI artifact"

on:
  workflow_dispatch: {}
  push:
    branches:
      - main
    paths:
      - .github/workflows/publish-oci.yaml
      - kubernetes/**

permissions: write-all

env:
  OCI_REPO: "oci://ghcr.io/neutralalice/manifests/${{ github.event.repository.name }}"
  GHCR_REPO: "ghcr.io/neutralalice/manifests/${{ github.event.repository.name }}"

jobs:
  publish:
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout Repository
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      
#      - name: Setup nixpkgs
#        uses: cachix/install-nix-action@d1ca217b388ee87b2507a9a93bf01368bde7cec2 # v31.1.0
#        with:
#          nix_path: nixpkgs=channel:nixos-unstable
      
#      - name: Print nixpkgs version
#        run: nix-instantiate --eval -E '(import <nixpkgs> {}).lib.version'
        
      - name: Setup flux CLI tool
        uses: fluxcd/flux2/action@6bf37f6a560fd84982d67f853162e4b3c2235edb # v2.6.4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup crane CLI tool
        uses: imjasonh/setup-crane@31b88efe9de28ae0ffa220711af4b60be9435f6e # v0.4

      - name: Setup cosign CLI tool
        uses: sigstore/cosign-installer@d58896d6a1865668819e1d91763c7751a165e159 # v3.9.2

      - name: Login to GHCR
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create OCI artifact
        run: |
          flux push artifact "$OCI_REPO:$(git rev-parse --short HEAD)" \
            --path="./kubernetes" \
            --source="$(git config --get remote.origin.url)" \
            --revision="$(git branch --show-current)@sha1:$(git rev-parse HEAD)" \
            --annotations="org.opencontainers.image.description=homelab"

      - name: Create OCI artifact tag
        run: |
          flux tag artifact "$OCI_REPO:$(git rev-parse --short HEAD)" --tag main

      - name: Get the digest of the OCI artifact
        id: crane
        run: |
          DIGEST=$(crane digest "$GHCR_REPO:$(git rev-parse --short HEAD)")
          echo "DIGEST=$DIGEST" >> $GITHUB_OUTPUT

      - name: Sign the OCI artifact
        run: cosign sign "$GHCR_REPO@${{ steps.crane.outputs.DIGEST }}" -y
